{"version":3,"sources":["services/api/create-company.js","admin/pages/users/create-user/create-company/create-company.jsx","services/api/create-user.js","admin/pages/users/create-user/create-user-form/create-user-form.jsx","admin/pages/users/create-user/create-user.jsx","components/form/form-controls/form-control.jsx","components/form/button/button.jsx","components/form/form.jsx","components/form/error-box/error-box.jsx","components/form/heading/heading.jsx","components/form/form-controls/input.jsx","components/form/form-controls/select.js","components/layout/modal/modal.jsx","services/api/get-company.js"],"names":["createCompany","callback","data","token","axios","post","headers","then","res","catch","err","connect","dispatch","addCompany","type","actionType","value","props","useState","name","setname","location","setlocation","nameWarn","setnameWarn","locationWarn","setlocationWarn","errorMsg","seterrorMsg","showLoader","setshowLoader","status","reset","cancelClick","response","onInputChange","e","target","outlineColor","trim","validate","onSubmitHandler","GetToken","preventDefault","labelName","placeholder","isRequired","classValue","errorMsgs","className","isType","htmlTypes","isBlock","createUser","Option","Select","CreateUserForm","email","setemail","companyId","setcompanyId","group","setgroup","phone","setphone","companyIdWarn","setcompanyIdWarn","groupWarn","setgroupWarn","console","log","_message","companies","optionFilterProp","onSelect","size","filterOption","input","option","children","toLowerCase","indexOf","map","company","_id","isSize","onClick","openModal","state","firstRunCompanies","Company","firstRun","getCompany","dispatchUpdateFirstRunCompanies","visible","setVisible","setShowLoader","gToken","useEffect","getCompanylist","bool","heading","showModal","footer","formControl","btn","htmlType","block","disabled","isDisabled","shape","forms","onSubmit","errorBox","inputType","htmlFor","prefix","prefixType","style","color","onChange","required","readOnly","isReadonly","select","showSearch","modal","title","onOk","okClick","onCancel","okText","cancelText","okType","okBType","cancelType","cancelBType","maskClosable","width","get"],"mappings":"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","file":"static/js/40.e591def8.chunk.js","sourcesContent":[" \r\n\r\nimport axios from '../axios/axios'\r\n\r\nconst createCompany = (callback, data, token) => {\r\n    axios.post(`/user/company`, data, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': token ? `Token ${token}` : '',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then((res) => {\r\n            callback(res)\r\n        }).catch(err => callback(err))\r\n}\r\n\r\nexport default createCompany","\r\n\r\nimport React, { Component, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from '../../../../../components/form/form'\r\nimport InputType from '../../../../../components/form/form-controls/input'\r\nimport Button from '../../../../../components/form/button/button'\r\nimport ErrorBox from '../../../../../components/form/error-box/error-box'\r\nimport Loader from '../../../../../components/ui/loader/loader'\r\n//api\r\nimport createCompany from '../../../../../services/api/create-company'\r\nimport * as actionType from '../../../../../store/actions/action-type'\r\nimport { GetToken } from '../../../../../helpers/token'\r\n\r\n\r\nconst CreateCompany = (props) => {\r\n\r\n    const [name, setname] = useState('');\r\n    const [location, setlocation] = useState('');\r\n    const [nameWarn, setnameWarn] = useState(false);\r\n    const [locationWarn, setlocationWarn] = useState(false);\r\n    const [errorMsg, seterrorMsg] = useState(false);\r\n    const [showLoader, setshowLoader] = useState('');\r\n\r\n    const callback = (data) => {\r\n        if (data.status === 200) {\r\n            reset();\r\n            props.addCompany(data.data);\r\n            props.cancelClick(false); // close modal\r\n        } else if (data.response) {\r\n            seterrorMsg('Something went wrong. Please try again later &#x2639;')\r\n            setshowLoader(false)\r\n        } else {\r\n            seterrorMsg('Something went wrong. Please try again later &#x2639;')\r\n            setshowLoader(false)\r\n        }\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        const token = GetToken();\r\n        e.preventDefault();\r\n        setshowLoader(true)\r\n        seterrorMsg('')\r\n        if (validate()) {\r\n            outlineColor();\r\n            const data = {\r\n                name: name,\r\n                location: location\r\n            };\r\n            if (data && token) {\r\n                createCompany(callback, data, token);\r\n            }\r\n        } else {\r\n            outlineColor();\r\n            seterrorMsg('Please fill all the required field.')\r\n        }\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        e.target.name(e.target.value)\r\n    }\r\n\r\n    const reset = () => {\r\n        setname('')\r\n        setlocation('')\r\n        seterrorMsg('')\r\n        setshowLoader(false)\r\n    }\r\n\r\n    const outlineColor = () => {\r\n        if (!name.trim()) {\r\n            setnameWarn(true)\r\n        } else {\r\n            setnameWarn(false)\r\n        } if (!location.trim()) {\r\n            setlocationWarn(true)\r\n        } else {\r\n            setlocationWarn(false)\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        return name.trim() !== '' && location.trim() !== '';\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitHandler={onFormSubmit}>\r\n            <InputType\r\n                type=\"text\"\r\n                value={name}\r\n                name=\"name\"\r\n                labelName=\"Company Name\"\r\n                placeholder=\"Enter Company Name\"\r\n                onInputChange={onInputChange}\r\n                isRequired={true}\r\n                classValue={nameWarn ? 'inputField-outline' : null}\r\n            />\r\n            <InputType\r\n                type=\"text\"\r\n                value={location}\r\n                name=\"location\"\r\n                labelName=\"Company Location\"\r\n                placeholder=\"Enter Company Location\"\r\n                onInputChange={onInputChange}\r\n                isRequired={true}\r\n                classValue={locationWarn ? 'inputField-outline' : null}\r\n            />\r\n            { errorMsg ? <ErrorBox errorMsgs={errorMsg} /> : null}\r\n            { showLoader ? <Loader>Creating...</Loader> : null}\r\n            <div className=\"issue-form-button\" >\r\n                <Button isType='primary' htmlTypes='submit' isBlock={true}>Submit</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addCompany: (data) => {\r\n            dispatch({\r\n                type: actionType.ADD_COMPANY,\r\n                value: data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateCompany)"," \r\n\r\nimport axios from '../axios/axios'\r\n\r\nconst createUser = (callback, data, token) => {\r\n    axios.post(`/user`, data, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': token ? `Token ${token}` : '',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then((res) => {\r\n            callback(res)\r\n        }).catch(err => callback(err))\r\n}\r\n\r\nexport default createUser","\r\n\r\nimport React, { Component, useState } from 'react'\r\nimport { Select } from 'antd'\r\nimport Form from '../../../../../components/form/form'\r\nimport InputType from '../../../../../components/form/form-controls/input'\r\nimport Button from '../../../../../components/form/button/button'\r\nimport Dropdown from '../../../../../components/form/form-controls/select'\r\nimport ErrorBox from '../../../../../components/form/error-box/error-box'\r\nimport Loader from '../../../../../components/ui/loader/loader'\r\nimport createUser from '../../../../../services/api/create-user'\r\nimport { GetToken } from '../../../../../helpers/token'\r\n\r\nconst Option = Select.Option;\r\n\r\nconst CreateUserForm = (props) => {\r\n\r\n    const [name, setname] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [companyId, setcompanyId] = useState('');\r\n    const [group, setgroup] = useState('');\r\n    const [phone, setphone] = useState('');\r\n    const [companyIdWarn, setcompanyIdWarn] = useState(false);\r\n    const [groupWarn, setgroupWarn] = useState(false);\r\n    const [errorMsg, seterrorMsg] = useState('');\r\n    const [showLoader, setshowLoader] = useState(false);\r\n\r\n    const reset = () => {\r\n        setname('')\r\n        setemail('')\r\n        setcompanyId('')\r\n        setgroup('')\r\n        setphone('')\r\n        seterrorMsg('')\r\n        setshowLoader(false)\r\n    }\r\n\r\n    const callback = (data) => {\r\n        if (data.status === 200) {\r\n            reset();\r\n            console.log(data.data)\r\n        } else if (data.response) {\r\n            seterrorMsg(data.response.data._message)\r\n            setshowLoader(false)\r\n        } else {\r\n            seterrorMsg('Something went wrong. Please try again later &#x2639;')\r\n            setshowLoader(false)\r\n        }\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        const token = GetToken();\r\n        seterrorMsg('')\r\n        setshowLoader(true)\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            outlineColor();\r\n            const data = {\r\n                name: name,\r\n                email: email,\r\n                companyId: companyId,\r\n                group: group,\r\n                phone: phone\r\n            };\r\n            if (data && token) {\r\n                createUser(callback, data, token);\r\n            }\r\n        } else {\r\n            outlineColor();\r\n            seterrorMsg('Please fill all the required field')\r\n        }\r\n    }\r\n\r\n    const onCompanySelect = (value) => {\r\n        setcompanyId(value)\r\n    }\r\n\r\n    const onUserRole = (value) => {\r\n        setgroup(value)\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        e.target.name(e.target.value)\r\n    }\r\n\r\n    const outlineColor = () => {\r\n        if (!companyId) {\r\n            setcompanyIdWarn(true)\r\n        } else {\r\n            setcompanyIdWarn(false)\r\n        } if (!group) {\r\n            setgroupWarn(true)\r\n        } else {\r\n            setgroupWarn(false)\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        return name !== '' && email !== '' && companyId !== '' && group !== '' && phone !== '';\r\n    }\r\n\r\n    const { companies } = props;\r\n    return (\r\n        <Form onSubmitHandler={onFormSubmit}>\r\n            <Dropdown\r\n                labelName=\"Comapny\"\r\n                placeholder=\"Select User Company\"\r\n                optionFilterProp=\"children\"\r\n                onSelect={onCompanySelect}\r\n                size=\"large\"\r\n                isRequired={true}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                classValue={companyIdWarn ? 'inputField-outline' : null}\r\n            >\r\n                {\r\n                    companies.map((company) => (\r\n                        <Option value={company._id} key={company._id}>{company.name}</Option>\r\n                    ))\r\n                }\r\n            </Dropdown>\r\n            <ErrorBox errorMsgs=\"If company is not listed above then create company\">\r\n                <Button isSize='small' isType='danger' onClick={() => props.openModal(true)}>Click</Button>\r\n            </ErrorBox>\r\n            <Dropdown\r\n                labelName=\"User Role\"\r\n                placeholder=\"Select User Role\"\r\n                optionFilterProp=\"children\"\r\n                onSelect={onUserRole}\r\n                size=\"large\"\r\n                isRequired={true}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                classValue={groupWarn ? 'inputField-outline' : null}\r\n            >\r\n                <Option value=\"user\">User</Option>\r\n                <Option value=\"admin\">Admin</Option>\r\n            </Dropdown>\r\n            <InputType\r\n                type=\"text\"\r\n                value={name}\r\n                name=\"name\"\r\n                labelName=\"Name \"\r\n                placeholder=\"Enter Name\"\r\n                onInputChange={onInputChange}\r\n                isRequired={true}\r\n            />\r\n            <InputType\r\n                type=\"email\"\r\n                value={email}\r\n                name=\"email\"\r\n                labelName=\"Email\"\r\n                placeholder=\"Enter Email\"\r\n                onInputChange={onInputChange}\r\n                isRequired={true}\r\n            />\r\n            <InputType\r\n                type=\"number\"\r\n                value={phone}\r\n                name=\"phone\"\r\n                labelName=\"Phone Number\"\r\n                placeholder=\"Enter Phone\"\r\n                onInputChange={onInputChange}\r\n                isRequired={true}\r\n            />\r\n            { errorMsg ? <ErrorBox errorMsgs={errorMsg} /> : null}\r\n            { showLoader ? <Loader>Creating...</Loader> : null}\r\n            <div className=\"issue-form-button\" >\r\n                <Button isType='primary' htmlTypes='submit' isBlock={true}>Submit</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateUserForm","\r\n\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Modal from '../../../../components/layout/modal/modal';\r\nimport Heading from '../../../../components/form/heading/heading';\r\nimport CreateComapny from './create-company/create-company';\r\nimport CreateUserForm from './create-user-form/create-user-form'\r\nimport { GetToken } from '../../../../helpers/token'\r\nimport Loader from '../../../../components/ui/loader/loader'\r\n//api\r\nimport getCompanylist from '../../../../services/api/get-company'\r\nimport * as actionType from '../../../../store/actions/action-type'\r\n\r\nconst CreateUser = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [showLoader, setShowLoader] = useState(props.firstRunCompanies);\r\n    const [gToken, setGToken] = useState(GetToken());\r\n\r\n    const callback = (data) => {\r\n        if (gToken) {\r\n            if (data.status === 200) {\r\n                props.getCompany(data.data);\r\n                setShowLoader(false);\r\n                props.dispatchUpdateFirstRunCompanies(false);\r\n            } else {\r\n                console.log(data.response);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (gToken) {\r\n            if (props.firstRunCompanies) {\r\n                getCompanylist(callback, gToken);\r\n            }\r\n        }\r\n    },[])\r\n\r\n    const openModal = (bool) => {\r\n        setVisible(bool);\r\n    }\r\n\r\n    // close modal\r\n    const cancelClick = (bool) => {\r\n        if (bool === false) {\r\n            setVisible(false);\r\n        } else {\r\n            setVisible(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (showLoader && !props.companies) {\r\n        return <Loader />\r\n    } else if (props.companies) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"issue-form\">\r\n                    <Modal\r\n                        heading=\"Create Company\"\r\n                        showModal={visible}\r\n                        cancelClick={cancelClick}\r\n                        footer={null}\r\n                    >\r\n                        <CreateComapny cancelClick={cancelClick} />\r\n                    </Modal>\r\n                    <Heading heading={\"Create New User\"} />\r\n                    <CreateUserForm openModal={openModal} companies={props.companies} />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        firstRunCompanies: state.Company.firstRun,\r\n        companies: state.Company.company\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getCompany: (data) => {\r\n            dispatch({\r\n                type: actionType.COMPANY,\r\n                value: data\r\n            })\r\n        },\r\n        dispatchUpdateFirstRunCompanies: (data) => {\r\n            dispatch({\r\n                type: actionType.UPDATE_FIRST_RUN_COMPANY,\r\n                value: data\r\n            })\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser)"," \r\n\r\nimport React from 'react'\r\n\r\nconst formControl = (props) => {\r\n    return(\r\n        <div className=\"form-control\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default formControl"," \r\n\r\n import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nconst btn = (props) => {\r\n    return(\r\n        <Button \r\n            htmlType={props.htmlTypes} \r\n            block={props.isBlock ? true : false}\r\n            size={props.isSize ? props.isSize : 'large'}\r\n            type={props.isType ? props.isType : 'default'}\r\n            disabled={props.isDisabled ? props.isDisabled : false}\r\n            shape={props.shape}\r\n            className={props.classValue}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default btn"," \r\n\r\nimport React from 'react'\r\n\r\nconst forms = (props) => {\r\n    return(\r\n        <form onSubmit={props.onSubmitHandler}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default forms"," \r\n\r\n import React from 'react';\r\nimport FormControl from '../form-controls/form-control'\r\nimport './error-box.css';\r\n\r\n  function errorBox(props){  \r\n    return (\r\n        <FormControl>\r\n            <div className=\"error-box\">\r\n                Warning:&nbsp;{props.errorMsgs}&nbsp;{props.children}\r\n            </div>\r\n        </FormControl>\r\n        \r\n    );\r\n  }\r\n\r\n\r\nexport default errorBox;"," \r\n\r\nimport React from 'react'\r\n\r\nconst heading = (props) => {\r\n    return(\r\n        <div className=\"heading\">\r\n            <h1>{props.heading}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default heading"," \n\nimport React from 'react'\nimport { Input } from 'antd';\nimport Icon from '@ant-design/icons';\nimport FormControl from './form-control'\n\nconst inputType =(props)=> {\n    return(\n        <FormControl>\n            <label htmlFor={props.name}>\n                {props.labelName}\n                {props.isRequired ? <span className=\"star\">*</span> : null}\n            </label>\n            <Input\n                type={props.type}\n                className={props.classValue}\n                placeholder={props.placeholder}\n                prefix={props.prefixType ? <Icon type={props.prefixType} style={{ color: 'rgba(0,0,0,.25)' }} /> : null}\n                name={props.name}\n                value={props.value}\n                onChange={props.onInputChange}\n                required={props.isRequired ? props.isRequired : false}\n                size='large'\n                readOnly={props.isReadonly ? props.isReadonly : false}\n            />\n        </FormControl>\n        \n    )\n}\n\nexport default inputType\n"," \r\n\r\nimport React from 'react'\r\nimport { Select } from 'antd';\r\nimport FormControl from './form-control'\r\n\r\nconst select =(props)=> {\r\n    return(\r\n        <FormControl>\r\n            <label htmlFor={props.name}>\r\n                {props.labelName}\r\n                {props.isRequired ? <span className=\"star\">*</span> : null}\r\n                &nbsp;\r\n            </label>\r\n            <Select\r\n                showSearch\r\n                className={props.classValue}\r\n                placeholder={props.placeholder}\r\n                optionFilterProp=\"children\"\r\n                onChange={props.onSelect}\r\n                size=\"large\"\r\n                required={props.isRequired ? props.isRequired : false}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                {...props}\r\n            >\r\n                {props.children}\r\n            </Select>\r\n        </FormControl>\r\n        \r\n    )\r\n}\r\n\r\nexport default select"," \r\n\r\nimport React from 'react'\r\nimport { Modal } from 'antd';\r\n\r\nconst modal = (props) => {\r\n    return(\r\n        <Modal \r\n            title={props.heading}\r\n            visible={props.showModal}\r\n            onOk={props.okClick}\r\n            onCancel={props.cancelClick}\r\n            okText={props.okText ? props.okText : 'Ok'}\r\n            cancelText=\"Cancel\"\r\n            okType={props.okBType ? props.okBType : 'primary'}\r\n            cancelType={props.cancelBType ? props.cancelBType : 'default'}\r\n            footer={props.footer}\r\n            maskClosable={props.maskClosable}\r\n            width={768}\r\n        >\r\n            {props.children}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default modal\r\n"," \r\n\r\nimport axios from '../axios/axios'\r\n\r\nconst getCompany = (callback, token) => {\r\n    axios.get(`/user/company`, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': token ? `Token ${token}` : '',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then((res) => {\r\n            callback(res)\r\n        }).catch(err => callback(err))\r\n}\r\n\r\nexport default getCompany"],"sourceRoot":""}