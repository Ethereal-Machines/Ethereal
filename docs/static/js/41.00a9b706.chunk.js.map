{"version":3,"sources":["../node_modules/antd/es/auto-complete/index.js","components/form/form-controls/auto-complete.jsx","components/form/form-controls/text-area.jsx","distributor/pages/issues/new/isuue-form.jsx","services/api/issues.js","components/form/form-controls/form-control.jsx","components/form/button/button.jsx","components/form/form.jsx","components/form/error-box/error-box.jsx","components/form/heading/heading.jsx","components/form/form-controls/input.jsx","services/api/user.js"],"names":["Option","Select","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","ref","customizeInput","customizePrefixCls","prefixCls","className","children","dataSource","childNodes","toArray","length","isValidElement","_childNodes","_slicedToArray","optionChildren","getInputElement","undefined","map","item","_typeof","React","key","value","optionValue","text","Error","devWarning","ConfigConsumer","_ref","getPrefixCls","_extends","omit","classNames","concat","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","Complete","htmlFor","name","labelName","isRequired","classValue","onSearch","onInputSearch","onSelect","onSelectChange","required","size","readOnly","isReadonly","placeholder","filterOption","inputValue","option","toUpperCase","indexOf","TextArea","Input","inputTextArea","onChange","onInputChange","autosize","minRows","connect","state","userComapny","Users","company","dispatch","dispatchUserCompany","data","actionType","useState","GetToken","gToken","productName","setproductName","serialNumber","setserialNumber","subject","message","productNameWarn","setproductNameWarn","serialNumberWarn","setserialNumberWarn","subjectWarn","setsubjectWarn","messageWarn","setmessageWarn","showLoader","setshowLoader","errorMsg","seterrorMsg","showUCLoader","setshowUCLoader","getCompanyCallback","status","console","log","response","useEffect","getUserCompany","callback","Modal","success","title","content","e","target","outlineColor","validate","productsNumber","products","product","push","machineSRN","heading","onSubmitHandler","preventDefault","description","token","axios","post","headers","then","res","catch","err","createIssue","errorMsgs","isType","htmlTypes","isBlock","formControl","btn","htmlType","block","isSize","disabled","isDisabled","shape","onClick","forms","onSubmit","errorBox","inputType","prefix","prefixType","style","color","get","forgotPassword","patch"],"mappings":"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","file":"static/js/41.00a9b706.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * TODO: 4.0\n *\n * - Remove `dataSource`\n * - `size` not work with customizeInput\n * - CustomizeInput not feedback `ENTER` key since accessibility enhancement\n */\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport Select from '../select';\nimport { ConfigConsumer } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { isValidElement } from '../_util/reactNode';\nvar Option = Select.Option;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n\n    customizeInput = _childNodes[0];\n  }\n\n  var getInputElement = customizeInput ? function () {\n    return customizeInput;\n  } : undefined; // ============================ Options ============================\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n      }\n    }) : [];\n  } // ============================ Warning ============================\n\n\n  React.useEffect(function () {\n    devWarning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.');\n    devWarning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.');\n  }, []);\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(Select, _extends({\n      ref: ref\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      className: classNames(\"\".concat(prefixCls, \"-auto-complete\"), className),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n      // Internal api\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;"," \r\n\r\nimport React from 'react'\r\nimport FormControl from '../form-controls/form-control'\r\nimport { AutoComplete } from 'antd';\r\n\r\n\r\nfunction Complete(props) {\r\n  return (\r\n      <FormControl>\r\n          <label htmlFor={props.name}>\r\n            {props.labelName}\r\n            {props.isRequired ? <span className=\"star\">*</span> : null}\r\n        </label>\r\n          <AutoComplete\r\n                className={props.classValue}\r\n                name={props.name}\r\n                //value={props.value}\r\n                onSearch={props.onInputSearch}\r\n                onSelect={props.onSelectChange}\r\n                required={props.isRequired ? props.isRequired : false}\r\n                size='large'\r\n                readOnly={props.isReadonly ? props.isReadonly : false}\r\n                dataSource={props.dataSource}\r\n                placeholder={props.placeholder}\r\n                filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n            />\r\n      </FormControl>\r\n    \r\n  );\r\n}\r\n\r\nexport default Complete"," \r\n\r\nimport React from 'react'\r\nimport { Input } from 'antd';\r\nimport FormControl from '../form-controls/form-control'\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst inputTextArea = (props) => {\r\n    return(\r\n        <FormControl>\r\n            <label htmlFor={props.name}>\r\n                {props.labelName}\r\n                {props.isRequired ? <span className=\"star\">*</span> : null}\r\n            </label>\r\n            <TextArea \r\n                placeholder={props.placeholder}\r\n                className={props.classValue}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.onInputChange}\r\n                size='large'\r\n                autosize={{minRows:props.minRows ? props.minRows : 6}}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default inputTextArea","\r\n\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Modal } from 'antd'\r\nimport Form from '../../../../components/form/form';\r\nimport Loader from '../../../../components/ui/loader/loader'\r\nimport ErrorBox from '../../../../components/form/error-box/error-box'\r\nimport AutoComplete from '../../../../components/form/form-controls/auto-complete';\r\nimport InputType from '../../../../components/form/form-controls/input';\r\nimport TextArea from '../../../../components/form/form-controls/text-area';\r\nimport Button from '../../../../components/form/button/button';\r\nimport Heading from '../../../../components/form/heading/heading';\r\n//\r\nimport * as actionType from '../../../../store/actions/action-type'\r\nimport { GetToken } from '../../../../helpers/token';\r\nimport { createIssue } from '../../../../services/api/issues';\r\nimport { getUserCompany } from '../../../../services/api/user';\r\n\r\nconst IssueForm = (props) => {\r\n\r\n    const [gToken, setgToken] = useState(GetToken())\r\n    const [productName, setproductName] = useState('')\r\n    const [serialNumber, setserialNumber] = useState('')\r\n    const [subject, setsubject] = useState('')\r\n    const [message, setmessage] = useState('')\r\n    const [productNameWarn, setproductNameWarn] = useState(false)\r\n    const [serialNumberWarn, setserialNumberWarn] = useState(false)\r\n    const [subjectWarn, setsubjectWarn] = useState(false)\r\n    const [messageWarn, setmessageWarn] = useState(false)\r\n    const [showLoader, setshowLoader] = useState(false)\r\n    const [errorMsg, seterrorMsg] = useState('')\r\n    const [showUCLoader, setshowUCLoader] = useState(true)\r\n\r\n    const success = () => {\r\n        Modal.success({\r\n            title: 'Successful',\r\n            content: 'Issue has been created :)',\r\n        });\r\n    }\r\n\r\n    const error = () => {\r\n        Modal.error({\r\n            title: 'Oops',\r\n            content: 'Something went wrong. Please try again later :(',\r\n        })\r\n    }\r\n\r\n    const getCompanyCallback = (data) => {\r\n        if (data.status === 200 || data.status === 304) {\r\n            setshowUCLoader(false)\r\n            props.dispatchUserCompany(data.data);\r\n        } else {\r\n            console.log(data.response)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (gToken) {\r\n            getUserCompany(getCompanyCallback, gToken)\r\n        }\r\n    }, [])\r\n\r\n    const callback = (data) => {\r\n        if (data.status === 200) {\r\n            success();\r\n            setshowLoader(false)\r\n            seterrorMsg('')\r\n        } else {\r\n            setshowLoader(false)\r\n            seterrorMsg('')\r\n            console.log(data.response)\r\n        }\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        setshowLoader(true)\r\n        seterrorMsg('')\r\n        if (validate() && gToken) {\r\n            const data = {\r\n                productName: productName,\r\n                serialNumber: serialNumber,\r\n                subject: subject,\r\n                description: message\r\n            }\r\n            outlineColor();\r\n            createIssue(callback, data, gToken);\r\n        } else {\r\n            outlineColor()\r\n            setshowLoader(false)\r\n            seterrorMsg('Fill all * field')\r\n        }\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        e.target.name(e.target.value)\r\n    }\r\n\r\n    const outlineColor = () => {\r\n        if (!productName) {\r\n            setproductNameWarn(true)\r\n        } else {\r\n            setproductNameWarn(false)\r\n        }\r\n        if (!serialNumber) {\r\n            setserialNumberWarn(true)\r\n        } else {\r\n            setserialNumberWarn(false)\r\n        }\r\n        if (!subject) {\r\n            setsubjectWarn(true)\r\n        } else {\r\n            setsubjectWarn(false)\r\n        }\r\n        if (!message) {\r\n            setmessageWarn(true)\r\n        } else {\r\n            setmessageWarn(false)\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        return productName !== '' && serialNumber !== '' && subject !== '' && message !== ''\r\n    }\r\n\r\n    const productsName = ['Pentagram', 'Ray', 'Halo'];\r\n    var productsNumber = [];\r\n    if (props.userComapny) {\r\n        props.userComapny.products && (\r\n            props.userComapny.products.map((product) => productsNumber.push(product.machineSRN))\r\n        )\r\n    }\r\n\r\n    if (showUCLoader) {\r\n        return (\r\n            <div className=\"container\">\r\n                <Loader />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"issue-form\">\r\n                    <Heading heading={\"Raise Issue\"} />\r\n                    <Form onSubmitHandler={onFormSubmit}>\r\n                        <AutoComplete\r\n                            onSelectChange={(value) => setproductName(value)}\r\n                            isRequired={true}\r\n                            name=\"productsName\"\r\n                            labelName=\"Product Name\"\r\n                            dataSource={productsName}\r\n                            placeholder=\"Select a Product\"\r\n                            classValue={productNameWarn ? 'inputField-outline' : null}\r\n                        />\r\n                        <AutoComplete\r\n                            onSelectChange={(value) => setserialNumber(value)}\r\n                            isRequired={true}\r\n                            name=\"productsNumber\"\r\n                            labelName=\"Product Number\"\r\n                            dataSource={productsNumber}\r\n                            placeholder=\"Select Product Number\"\r\n                            classValue={serialNumberWarn ? 'inputField-outline' : null}\r\n                        />\r\n                        <InputType\r\n                            type=\"text\"\r\n                            value={subject}\r\n                            name=\"subject\"\r\n                            labelName=\"Subject\"\r\n                            placeholder=\"Enter subject\"\r\n                            onInputChange={onInputChange}\r\n                            isRequired={true}\r\n                            classValue={subjectWarn ? 'inputField-outline' : null}\r\n                        />\r\n                        <TextArea\r\n                            name=\"message\"\r\n                            labelName=\"Description\"\r\n                            placeholder=\"Enter Description\"\r\n                            value={message}\r\n                            onInputChange={onInputChange}\r\n                            isRequired={true}\r\n                            classValue={messageWarn ? 'inputField-outline' : null}\r\n                        />\r\n                        {errorMsg ? <ErrorBox errorMsgs={errorMsg} /> : null}\r\n                        {showLoader ? <Loader>Creating...</Loader> : null}\r\n                        <div className=\"issue-form-button\" >\r\n                            <Button isType='primary' htmlTypes='submit' isBlock={true}>Submit</Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userComapny: state.Users.company\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dispatchUserCompany: (data) => {\r\n            dispatch({\r\n                type: actionType.USER_COMPANY,\r\n                value: data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueForm)"," \r\n\r\nimport axios from '../axios/axios';\r\n\r\n// (user id)\r\nexport const createIssue = (callback, data, token) => {\r\n    axios.post(`/issues`, data, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': token ? `Token ${token}` : '',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then((res) => {\r\n            callback(res);\r\n        }).catch((err) => callback(err));\r\n};\r\n\r\n// get issues\r\nexport const getIssues = (callback, token) => {\r\n    axios.get('/issues', {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': token ? `Token ${token}` : '',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then((res) => {\r\n        callback(res)\r\n    }).catch(err => callback(err))\r\n}"," \r\n\r\nimport React from 'react'\r\n\r\nconst formControl = (props) => {\r\n    return(\r\n        <div className=\"form-control\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default formControl"," \r\n\r\n import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nconst btn = (props) => {\r\n    return(\r\n        <Button \r\n            htmlType={props.htmlTypes} \r\n            block={props.isBlock ? true : false}\r\n            size={props.isSize ? props.isSize : 'large'}\r\n            type={props.isType ? props.isType : 'default'}\r\n            disabled={props.isDisabled ? props.isDisabled : false}\r\n            shape={props.shape}\r\n            className={props.classValue}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default btn"," \r\n\r\nimport React from 'react'\r\n\r\nconst forms = (props) => {\r\n    return(\r\n        <form onSubmit={props.onSubmitHandler}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default forms"," \r\n\r\n import React from 'react';\r\nimport FormControl from '../form-controls/form-control'\r\nimport './error-box.css';\r\n\r\n  function errorBox(props){  \r\n    return (\r\n        <FormControl>\r\n            <div className=\"error-box\">\r\n                Warning:&nbsp;{props.errorMsgs}&nbsp;{props.children}\r\n            </div>\r\n        </FormControl>\r\n        \r\n    );\r\n  }\r\n\r\n\r\nexport default errorBox;"," \r\n\r\nimport React from 'react'\r\n\r\nconst heading = (props) => {\r\n    return(\r\n        <div className=\"heading\">\r\n            <h1>{props.heading}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default heading"," \n\nimport React from 'react'\nimport { Input } from 'antd';\nimport Icon from '@ant-design/icons';\nimport FormControl from './form-control'\n\nconst inputType =(props)=> {\n    return(\n        <FormControl>\n            <label htmlFor={props.name}>\n                {props.labelName}\n                {props.isRequired ? <span className=\"star\">*</span> : null}\n            </label>\n            <Input\n                type={props.type}\n                className={props.classValue}\n                placeholder={props.placeholder}\n                prefix={props.prefixType ? <Icon type={props.prefixType} style={{ color: 'rgba(0,0,0,.25)' }} /> : null}\n                name={props.name}\n                value={props.value}\n                onChange={props.onInputChange}\n                required={props.isRequired ? props.isRequired : false}\n                size='large'\n                readOnly={props.isReadonly ? props.isReadonly : false}\n            />\n        </FormControl>\n        \n    )\n}\n\nexport default inputType\n"," \r\n\r\nimport axios from '../axios/axios';\r\n\r\n// get issues\r\nexport const getUserCompany = (callback, token) => {\r\n    axios.get('/companycreate/', {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': token ? `Token ${token}` : '',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then((res) => {\r\n        callback(res)\r\n    }).catch(err => callback(err))\r\n}\r\n\r\n// forgot password\r\nexport const forgotPassword = (callback, data) => {\r\n    axios.patch('/user/forgot-password', data)\r\n    .then((res) => {\r\n        callback(res)\r\n    }).catch((err) => callback(err))\r\n}"],"sourceRoot":""}