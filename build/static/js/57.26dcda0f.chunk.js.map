{"version":3,"sources":["services/api/login.js","pages/login/component/login-form/login-form.jsx","pages/login/login.jsx"],"names":["axios","create","baseURL","connect","dispatch","loginUser","type","actionType","props","authContext","useContext","AuthContext","login2","session","useState","username","setUsername","password","setPassword","errorMsg","seterrorMsg","formSubmissionStart","setformSubmissionStart","setloginLoader","tokenVerifyCallback","data","status","basic","console","log","response","useEffect","GetToken","tokenVerify","loginCallback","auth_token","sessionStorage","setItem","history","push","utilityFunctions","SetToken","token","firstTime","approval","group","Error","onSubmit","e","preventDefault","htmlFor","className","name","placeholder","id","required","value","onChange","target","isRequired","onClick","login","Login"],"mappings":"6NAEsBA,EAAMC,OAAO,CAC/BC,QAAS,qC,+CCsKEC,cAAQ,MAXI,SAACC,GACxB,MAAO,CACHC,UAAW,WACPD,EAAS,CACLE,KAAMC,UAOPJ,EA3JG,SAACK,GAEf,IAAMC,EAAcC,qBAAWC,KACvBC,EAAoBH,EAApBG,OAHiB,GAGGH,EAAZI,QACgBC,mBAAS,KAJhB,mBAIlBC,EAJkB,KAIRC,EAJQ,OAKOF,mBAAS,IALhB,mBAKlBG,EALkB,KAKRC,EALQ,OAMOJ,mBAAS,MANhB,mBAMlBK,EANkB,KAMRC,EANQ,OAO6BN,oBAAS,GAPtC,mBAOlBO,EAPkB,KAOGC,EAPH,OAQaR,oBAAS,GARtB,mBAQLS,GARK,WAUnBC,EAAsB,SAACC,GACL,MAAhBA,EAAKC,QACLH,GAAe,GACff,EAAMmB,MAAMF,EAAKA,QAEjBF,GAAe,GACfK,QAAQC,IAAIJ,EAAKK,YAIzBC,qBAAU,WACFC,IACAC,YAAYT,EAAqBQ,eAEjCT,GAAe,KAEpB,IAEH,IASMW,EAAgB,SAACT,GAEnB,GAAoB,MAAhBA,EAAKC,OAGDD,EAAKA,KAAKU,YACVC,eAAeC,QAAQ,MAAOZ,EAAKA,KAAKU,YACxC3B,EAAMH,YACNG,EAAM8B,QAAQC,KAAK,KACnBC,IAAkC,iBAClCpB,EAAY,MACZE,GAAuB,KAGvBF,EAAY,IACZG,GAAe,GACfkB,YAAShB,EAAKA,KAAKiB,MAAO,GAEE,UAAxBjB,EAAKA,KAAKkB,UACVnC,EAAM8B,QAAQC,KAAK,wBACY,YAAvBd,EAAKA,KAAKmB,UAAiD,OAAvBnB,EAAKA,KAAKmB,UAA8C,SAAxBnB,EAAKA,KAAKkB,UAEvD,SAAxBlB,EAAKA,KAAKkB,WAA+C,aAAvBlB,EAAKA,KAAKmB,WAC5B,QAAnBnB,EAAKA,KAAKoB,OACVjB,QAAQC,IAAIJ,EAAKA,MACjBjB,EAAM8B,QAAQC,KAAK,mBAGnB/B,EAAM8B,QAAQC,KAAK,oBAPvB/B,EAAM8B,QAAQC,KAAK,uBAkBxB,GAAId,EAAKK,SACZV,EAAYK,EAAKK,SAASL,MAC1BH,GAAuB,OACpB,CAEHF,EADwB,CAAE0B,MAAO,CAAC,mDAElCxB,GAAuB,KAoB/B,OACI,uBAAMyB,SA3EY,SAACC,GACnBA,EAAEC,kBA0EF,UACI,eAAC,IAAD,WACI,wBAAOC,QAAQ,WAAf,qBAEQ,sBAAMC,UAAU,OAAhB,kBAER,uBACI7C,KAAK,OACL8C,KAAK,WACLC,YAAY,qBACZF,UAAU,gBACVG,GAAG,WACHC,UAAU,EACVC,MAAOzC,EACP0C,SAAU,SAAAT,GAAC,OAAIhC,EAAYgC,EAAEU,OAAOF,aAG5C,eAAC,IAAD,WACI,wBAAON,QAAQ,WAAf,qBAEQ,sBAAMC,UAAU,OAAhB,kBAER,uBACI7C,KAAK,WACL8C,KAAK,WACLC,YAAY,qBACZF,UAAU,gBACVG,GAAG,WACHC,UAAU,EACVC,MAAOvC,EACPwC,SAAU,SAAAT,GAAC,OAAI9B,EAAY8B,EAAEU,OAAOF,aAG3CrC,EAAW,cAAC,IAAD,CAAUwC,YAAU,EAACxC,SAAUA,IAAe,KACzDE,EAAsB,cAAC,IAAD,yCAA8C,KACrE,wBAAQ8B,UAAU,WAAWS,QApDrB,WACZ,IAAMnC,EAAO,CACTV,SAAUA,EACVE,SAAUA,GAEG,aAAbF,GAAwC,aAAbA,GAE3BH,EAAOsB,EAAeT,GACtBG,QAAQC,IAAI,aAGZgC,YAAM3B,EAAeT,GACrBG,QAAQC,IAAI,iBAwCZ,yB,kBC9HGiC,UAhBD,SAACtD,GAEb,OACE,sBAAK2C,UAAU,mBAAf,UACE,cAAC,IAAD,IACA,yBAASA,UAAU,mBAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAWb,QAAS9B,EAAM8B,cAG9B,cAAC,IAAD","file":"static/js/57.26dcda0f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst loginInstance = axios.create({\r\n    baseURL: 'https://api.etherealmachines.com'\r\n});\r\n\r\nconst loginUser = (callback, data) => {\r\n    loginInstance.post(`/auth/token/login/`, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n        .then((res) => { callback(res) })\r\n        .catch(err => callback(err))\r\n}\r\n\r\nexport default loginUser\r\n\r\n// this is the actions that i talked about","import React, { Component, useEffect, useContext, useState, useReducer } from 'react'\r\nimport ErrorBox from '../../../../components/pages-component/form/components/error-box'\r\nimport Loader from '../../../../components/ui/loader/loader'\r\nimport '../../../../components/pages-component/button/button.css'\r\nimport FormControl from '../../../../components/pages-component/form-controls/components/form-control'\r\nimport { connect } from 'react-redux'\r\nimport loginUser from '../../../../services/api/login'\r\nimport { login } from '../../../../services/api/login-ims'\r\nimport * as actionType from '../../../../store/actions/action-type'\r\nimport * as utilityFunctions from '../../../../utility-functions/utility-functions';\r\nimport { SetToken, GetToken } from '../../../../helpers/token';\r\nimport { tokenVerify } from '../../../../services/api/login-ims'\r\nimport AuthContext from '../../../../context2/authContext/authContext'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const { login2, session } = authContext  // this is how we get data from the global scope\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [errorMsg, seterrorMsg] = useState(null)\r\n    const [formSubmissionStart, setformSubmissionStart] = useState(false)\r\n    const [loginLoader, setloginLoader] = useState(true)\r\n\r\n    const tokenVerifyCallback = (data) => {\r\n        if (data.status === 200) {\r\n            setloginLoader(false)\r\n            props.basic(data.data)\r\n        } else {\r\n            setloginLoader(false)\r\n            console.log(data.response)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (GetToken) {\r\n            tokenVerify(tokenVerifyCallback, GetToken());\r\n        } else {\r\n            setloginLoader(false)\r\n        }\r\n    }, [])\r\n\r\n    const onSubmitLogin = (e) => {\r\n        e.preventDefault()\r\n    };\r\n\r\n    // const handleInputChange = (e) => {\r\n    //     e.target.name([e.target.value])\r\n    // };\r\n    // const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n    const loginCallback = (data) => {\r\n\r\n        if (data.status === 200) {\r\n            //            console.log(data.data.is_superuser)  \r\n\r\n            if (data.data.auth_token) {\r\n                sessionStorage.setItem('jwt', data.data.auth_token);\r\n                props.loginUser()\r\n                props.history.push(\"/\");\r\n                utilityFunctions.clearSelectField('.select-input');\r\n                seterrorMsg(null)\r\n                setformSubmissionStart(false)\r\n            }\r\n            else {\r\n                seterrorMsg('')\r\n                setloginLoader(false)\r\n                SetToken(data.data.token, 5)\r\n                // props.basic(data.data.user);\r\n                if (data.data.firstTime === 'false') {\r\n                    props.history.push('/user/updatePassword');\r\n                } else if ((data.data.approval === 'pending' || data.data.approval === null) && data.data.firstTime === 'true') {\r\n                    props.history.push('/user/profile');\r\n                } else if (data.data.firstTime === 'true' && data.data.approval === 'approved') {\r\n                    if (data.data.group == 'user') {\r\n                        console.log(data.data)\r\n                        props.history.push('/dashboarduser');\r\n                    }\r\n                    else {\r\n                        props.history.push('/dashboardadmin');\r\n                    }\r\n                    // props.login();\r\n                    // if (!url || url === '/login') {\r\n                    //     props.history.push('/dashboard');\r\n                    // } else {\r\n                    //     props.history.push(url);\r\n                    // }\r\n                }\r\n            }\r\n\r\n        } else if (data.response) {\r\n            seterrorMsg(data.response.data)\r\n            setformSubmissionStart(false)\r\n        } else {\r\n            const genericErrorMsg = { Error: [\"Oops! Something went wrong, please try again.\"] };\r\n            seterrorMsg(genericErrorMsg)\r\n            setformSubmissionStart(false)\r\n        }\r\n    };\r\n\r\n    const logedIn = () => {\r\n        const data = {\r\n            username: username,\r\n            password: password\r\n        };\r\n        if (username === 'ethereal' || username === 'Ethereal') {\r\n            // loginUser(loginCallback, data);\r\n            login2(loginCallback, data);\r\n            console.log('working')\r\n        }\r\n        else {\r\n            login(loginCallback, data);\r\n            console.log('not working')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmitLogin}>\r\n            <FormControl>\r\n                <label htmlFor=\"username\">\r\n                    Username\r\n                        <span className=\"star\">*</span>\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Enter the username\"\r\n                    className=\"input-element\"\r\n                    id=\"username\"\r\n                    required={true}\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                />\r\n            </FormControl>\r\n            <FormControl>\r\n                <label htmlFor=\"password\">\r\n                    Password\r\n                        <span className=\"star\">*</span>\r\n                </label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter the password\"\r\n                    className=\"input-element\"\r\n                    id=\"password\"\r\n                    required={true}\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n            </FormControl>\r\n            {errorMsg ? <ErrorBox isRequired errorMsg={errorMsg} /> : null}\r\n            {formSubmissionStart ? <Loader>Submitting your request...</Loader> : null}\r\n            <button className=\"form-btn\" onClick={logedIn}>Login</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser: () => {\r\n            dispatch({\r\n                type: actionType.LOGIN,\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginForm)\r\n","/*\r\n * __author__ = 'Kanishka Mohan Madhuni <kmmadhuni@gmail.com>'\r\n * __copyright__ = 'Copyright (C) 2018 Ethereal Machines Pvt. Ltd. All rights reserved'\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport LoginForm from './component/login-form/login-form'\r\nimport Header from '../../components/layout/header/header';\r\nimport Footer from '../../components/layout/footer/footer';\r\n\r\nconst Login = (props) => {\r\n\r\n  return (\r\n    <div className=\"page page--login\">\r\n      <Header />\r\n      <section className=\"section flex-row\">\r\n        <div className=\"container\">\r\n          <LoginForm history={props.history} />\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}